external_components:
  - source: github://clowrey/esphome
    components: [ axp192 ]
    refresh: 1min

# AXP192 power management - must be present to initialize TFT power on
sensor:
  - platform: axp192
    address: 0x34
    i2c_id: bus_a
    update_interval: 30s
    battery_level:
      name: "M5Stick Battery Level"
      id: "m5stick_batterylevel"

  - platform: wifi_signal
    name: ${upper_devicename} WiFi Signal
    id: wifi_dbm
  - platform: uptime
    name: ${upper_devicename} Uptime


spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

i2c:
   - id: bus_a
     sda: GPIO21
     scl: GPIO22
     scan: True
    
time:
  - platform: homeassistant
    id: esptime

color:
  - id: my_red
    red: 100%
    green: 0%
    blue: 0%
  - id: my_orange
    red: 100%
    green: 50%
    blue: 0%
  - id: my_yellow
    red: 100%
    green: 100%
    blue: 0%
  - id: my_green
    red: 0%
    green: 100%
    blue: 0%
  - id: my_blue
    red: 0%
    green: 0%
    blue: 100%
  - id: my_teal
    red: 0%
    green: 100%
    blue: 100%
  - id: my_gray
    red: 50%
    green: 50%
    blue: 50%

font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 12
  - file: "gfonts://Helvetica"
    id: helvetica_12
    size: 12

binary_sensor:
  - platform: status
    name: "Node Status"
    id: system_status

#Display size 135*240
display:
  - platform: st7789v
    model: TTGO TDisplay 135x240
    id: tft
    cs_pin: GPIO5
    dc_pin: GPIO23
    reset_pin: GPIO18
    pages:
      - id: page1
        lambda: |-
          it.rectangle(0,  0, it.get_width(), it.get_height(), id(my_blue));
          it.rectangle(0, 20, it.get_width(), it.get_height(), id(my_blue));   // header bar
          
          //it.print(5, 5, id(helvetica_12), id(my_yellow), TextAlign::TOP_LEFT, "ESPHome");
          it.strftime(5, 5, id(helvetica_12), id(my_yellow), TextAlign::TOP_LEFT, "%H:%M:%S", id(esptime).now());

          if (id(system_status).state) {
            it.print(135, 5, id(helvetica_12), id(my_green), TextAlign::TOP_RIGHT, "Online");
          }
          else {
            it.print(135, 5, id(helvetica_12), id(my_red), TextAlign::TOP_RIGHT, "Offline");
          }

          it.print((140 / 2), (240 / 6.5) * 1 - 8, id(helvetica_12), id(my_yellow), TextAlign::CENTER, "Battery");
          it.printf((140 / 2), (240 / 6.5) * 1 + 9, id(helvetica_12), id(my_yellow), TextAlign::CENTER, "%.2f", id(m5stick_batterylevel).state);
          it.line(0, (240 / 6.5) * 1 + 18, 140, (240 / 6.5) * 1 + 18, id(my_blue));
        
          it.print((140 / 2), (240 / 6.5) * 2 - 8, id(helvetica_12), id(my_green), TextAlign::CENTER, "Wifi Signal");
          it.printf((140 / 2), (240 / 6.5) * 2 + 9, id(helvetica_12), id(my_green), TextAlign::CENTER, "%.2fdbm", id(wifi_dbm).state);
          it.line(0, (240 / 6.5) * 2 + 18, 140, (240 / 6.5) * 2 + 18, id(my_blue));
